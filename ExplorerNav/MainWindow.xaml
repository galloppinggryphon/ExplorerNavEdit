<Window x:Class="ExplorerNav.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExplorerNav" 
        xmlns:conv="clr-namespace:ExplorerNav.Converters" 
        xmlns:viewmodels="clr-namespace:ExplorerNav.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:MainVM}"
        mc:Ignorable="d"
        Title="Explorer Navigation Editor" Height="450" Width="800" ResizeMode="CanMinimize">
    <Window.Resources>
        <conv:StatusColour x:Key="statusColourConverter"/>
        <conv:StatusText x:Key="statusTextConverter"/>


        <Style x:Key="ListItemTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="ListItemPath" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ListItemStatus" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Bahnschrift Semibold"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>


        <Style x:Key="MainFormLabel" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="MainFormTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style TargetType="Button" x:Key="DefaultButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            >
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center"
                          VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="white"/>
            <Setter Property="Foreground" Value="black"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="black"/>
                    <Setter Property="Foreground" Value="white"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#FF00ACFF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF00ACFF"/>
                    <Setter Property="Foreground" Value="white"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#FF87ACC8"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button"  BasedOn="{StaticResource DefaultButton}"/>

        <Style x:Key="OutlinedButton" TargetType="Button"  BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="BorderBrush" Value="white"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="white"/>
                    <Setter Property="Foreground" Value="black"/>
                    <!--<Setter Property="BorderBrush" Value="white"/>-->
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF00ACFF"/>
                    <Setter Property="Foreground" Value="white"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LinkButton" TargetType="Button"  BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="BorderBrush" Value="Transparent"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="white"/>
                    <Setter Property="Foreground" Value="black"/>
                    <!--<Setter Property="BorderBrush" Value="white"/>-->
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF00ACFF"/>
                    <Setter Property="Foreground" Value="white"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DangerButton" TargetType="Button"  BasedOn="{StaticResource DefaultButton}">
            <Setter Property="Background" Value="#FF99DEFA"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFFFB0B0"/>
                    <Setter Property="Foreground" Value="black"/>
                    <Setter Property="BorderBrush" Value="#FFFF6565"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF00ACFF"/>
                    <Setter Property="Foreground" Value="white"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="13*"/>
            <RowDefinition Height="49*"/>
        </Grid.RowDefinitions>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF002743"/>
                <GradientStop Color="#FF0071C0" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>

        <ListBox x:Name="lstNavItems" ItemsSource="{Binding Path=NavList.Items, Mode=OneWay}" SelectedItem="{Binding Path=CurrentItem, Mode=TwoWay}" Margin="20,0,500,20" d:ItemsSource="{d:SampleData ItemCount=5}" Background="White" VerticalAlignment="Bottom" Height="300" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" Height="55" Width="230" Background="{x:Null}">
                        <TextBlock Text="{Binding Title}" Style="{StaticResource ListItemTitle}" Margin="0,0,10,0" FontSize="16" />
                        <TextBlock Text="{Binding Path}"  Style="{StaticResource ListItemPath}" />
                        <Grid Height="25" Width="230">
                            <TextBlock d:Text="Applied" Text="{Binding Path=State.Status, ConverterParameter='applied', Converter={ StaticResource statusTextConverter }}" Style="{StaticResource ListItemStatus}" HorizontalAlignment="Left" />
                            <TextBlock d:Text="Saved" Text="{Binding Path=State.Status, ConverterParameter='saved', Converter={ StaticResource statusTextConverter }}" Style="{StaticResource ListItemStatus}" HorizontalAlignment="Right" Foreground="#FFA70000" />
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button x:Name="btnLoadFromRegistry" Content="Refresh list &#xD;&#xA;from registry" Margin="330,0,340,0" VerticalAlignment="Center" Height="53" FontSize="14" Click="BtnLoadFromRegistry_Click" />
        <Button x:Name="btnImport" Content="Import" Margin="160,0,563,0" VerticalAlignment="Center" Height="53" FontSize="14" Click="BtnImport_Click"/>
        <Button x:Name="btnExport" Content="Export" Margin="242,0,481,0"  VerticalAlignment="Center" Height="53" FontSize="14" Click="BtnExport_Click" IsEnabled="{Binding NavList.HasItems}" />
        <Button x:Name="btnNewItem" Content="New Item" Margin="20,0,650,0" VerticalAlignment="Center" Height="53" FontSize="14" Click="BtnNewItem_Click" FontFamily="Bahnschrift SemiBold" />

        <TextBlock HorizontalAlignment="Right" Margin="0,18,20,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="262" FontFamily="Bahnschrift SemiBold" FontSize="28" Foreground="White" TextAlignment="Right">Explorer Navigation</TextBlock>
        <TextBlock HorizontalAlignment="Right" Margin="0,53,20,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="66" FontFamily="Bahnschrift" FontSize="20" Foreground="White" TextAlignment="Right">Editor</TextBlock>

        <Grid x:Name="gridItemEditor" Height="300" Margin="0,0,20,20" VerticalAlignment="Bottom" Width="450" HorizontalAlignment="Right" IsEnabled="{Binding IsEditorEnabled}" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50*"/>
                <RowDefinition Height="44*"/>
                <RowDefinition Height="75*"/>
                <RowDefinition Height="75*"/>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="47*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="gridStatusBar" Grid.Row="0" Height="30" VerticalAlignment="Top" Background="{Binding Path=CurrentItem.State.Status, Converter={StaticResource statusColourConverter}, FallbackValue='#FF0084B1'}">
                <TextBlock Text="{Binding Path=CurrentItem.State.Status, ConverterParameter='applied', Converter={StaticResource statusTextConverter}}" HorizontalAlignment="Left" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center" Margin="10,0,0,0" FontFamily="Bahnschrift SemiBold" Width="110" FontSize="14"/>
                <TextBlock Text="{Binding Path=CurrentItem.State.Status, Converter={StaticResource statusTextConverter}, ConverterParameter='saved'}" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center" Margin="125,0,145,0" FontFamily="Bahnschrift SemiBold" FontSize="14"/>
                <TextBlock Text="{Binding CurrentItem.State.Status, ConverterParameter=error, Converter={StaticResource statusTextConverter}}" TextWrapping="Wrap" Foreground="White" VerticalAlignment="Center" Margin="310,0,10,0" FontFamily="Bahnschrift SemiBold" FontSize="14" TextAlignment="Right"/>
            </Grid>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Height="30" Grid.Row="1">
                <Label Content="Title" Width="100" Foreground="White" FontSize="16"/>
                <TextBox Style="{StaticResource MainFormTextBox}" x:Name="txtTitle" Text="{Binding CurrentItem.Title}"  Width="370" Height="30" MaxLength="28"  HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="2" VerticalAlignment="Top" Height="30" Margin="0,10,0,0">
                <Label Content="Path" Width="100" Foreground="White" FontSize="16"/>
                <TextBox Style="{StaticResource MainFormTextBox}" x:Name="txtPath" Text="{Binding CurrentItem.Path}" IsReadOnly="{Binding CurrentItem.State.IsBuiltIn}" Width="370" Height="30" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
            </StackPanel>
            <Button x:Name="btnBrowse" Content="Browse..."  Style="{StaticResource OutlinedButton}" HorizontalAlignment="Right" Height="28" VerticalAlignment="Bottom" Width="85" Grid.Row="2" Click="BtnBrowse_Click" IsEnabled="{Binding CurrentItem.State.IsNormal}"/>

            <StackPanel Orientation="Horizontal" Grid.Row="3" VerticalAlignment="Top" Height="30" Margin="0,10,0,0">
                <Label Content="Icon" Width="100" Foreground="White" Style="{StaticResource MainFormLabel}"/>
                <TextBox Style="{StaticResource MainFormTextBox}" x:Name="txtIcon" Text="{Binding CurrentItem.Icon}" Width="370" Height="30" IsReadOnly="True" HorizontalAlignment="Right" VerticalContentAlignment="Center"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="3" Height="30" Margin="0,45,0,0" FlowDirection="RightToLeft" VerticalAlignment="Top">
                <Button x:Name="btnSelectIcon" Content="Browse..." Style="{StaticResource OutlinedButton}" Height="28" VerticalAlignment="Top" Width="85" Click="BtnSelectIcon_Click" Grid.Row="2" FlowDirection="LeftToRight"/>
                <Button x:Name="btnResetIconPicker" Content="Load system icons" Style="{StaticResource LinkButton}" Height="28" VerticalAlignment="Top" Width="147" Grid.Row="2" Click="BtnResetIconPicker_Click" Margin="10,0,10,0"/>
            </StackPanel>

            <Button x:Name="btnUnregister" Content="Unregister" Style="{StaticResource DangerButton}" VerticalAlignment="Bottom" Height="40" FontSize="14"  HorizontalAlignment="Left" Width="90" Grid.Row="5" Click="BtnUnregister_Click" IsEnabled="{Binding CurrentItem.State.IsApplied}"/>
            <Button x:Name="btnRemove" Content="Remove" Style="{StaticResource DangerButton}" VerticalAlignment="Bottom" Height="40"  FontSize="14" HorizontalAlignment="Left" Width="90" Margin="95,0,0,0" Grid.Row="5" Click="BtnRemove_Click" IsEnabled="{Binding CurrentItem.State.IsNotApplied}"/>
            <Button x:Name="btnRegister" Content="Register" FontSize="14" FontFamily="Bahnschrift SemiBold" HorizontalAlignment="Right" Width="115" Margin="0,7,0,0" Grid.Row="5" Click="BtnRegister_Click"/>

        </Grid>
        <Button x:Name="btnAbout" Style="{StaticResource LinkButton}"  HorizontalAlignment="Right" Height="28" Margin="0,51,218,0" VerticalAlignment="Top" Width="56" Click="BtnAbout_Click" FontSize="14">
            <Underline>
                <Run Text="About"/>
            </Underline>
        </Button>
    </Grid>
</Window>
